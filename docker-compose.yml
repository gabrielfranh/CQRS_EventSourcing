version: "3.8"
services:
  zookeeper:
    image: docker.io/bitnamilegacy/zookeeper:latest
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnamilegacy/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    restart: always
    volumes:
      - kafka_data:/bitnami
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@localhost:9093
    depends_on:
      - zookeeper

  mongodb:
    image: mongo:latest
    container_name: mongo-container
    restart: always
    ports:
      - 27017:27017
    volumes:
      - "mongo_db_data_container:/data/db"
    networks:
      - default

  sql-container:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-container
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    restart: always
    networks:
      - default

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  mongo_db_data_container:
    driver: local

networks:
   default:
    name: mydockernetwork
    external: true
